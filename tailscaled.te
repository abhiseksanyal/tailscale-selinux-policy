policy_module(tailscaled, 1.0.0)

# NOTE:
# What is going on with /var/lib/tailscaled

# References,
# https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_a_daemon_domain
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/using_selinux/writing-a-custom-selinux-policy_using-selinux
#
#
#
gen_require(`
	type devpts_t;
	type sshd_key_t;
    # type system_dbusd_t, root_t, bin_t, var_t, tmp_t, unconfined_t, initrc_t, fs_t, cgroup_t, var_lib_nfs_t, http_port_t, shell_exec_t, syslogd_t, setroubleshootd_t;
    # These are temporarily defined to allow access to OAS Manager.
    # Identify a more generic allow policy to get uid for running process.
    # type chkpwd_t, crond_t, locate_t, logrotate_t, prelink_cron_system_t, prelink_t, readahead_t, sysstat_t, system_cronjob_t, semanage_t, setfiles_t, sshd_t;
    # type postfix_pickup_t, udev_t, user_tmp_t;
    # type rhsmcertd_t, systemd_tmpfiles_t, systemd_logind_t;
    # type rpm_var_lib_t;
    # role unconfined_r;
')

########################################
#
# Declarations
#

type tailscaled_t;
type tailscaled_exec_t;
# Create a domain for tailscaled service started by init - defined in system/init.if
init_daemon_domain(tailscaled_t, tailscaled_exec_t)
# Make the type tailscaled_exec_t usable as an entry point for the domain tailscaled_exec_t - defined in kernel/domain.if
domain_entry_file(tailscaled_t, tailscaled_exec_t)

# Type for systemd unit file type
type tailscaled_unit_file_t;
# Creates the file type used for Tailscale systemd unit files - defined in system/systemd.if
systemd_unit_file(tailscaled_unit_file_t)

# Type for /var/lib/tailscale directory file type
type tailscale_var_lib_t;
files_type(tailscale_var_lib_t)

# Type for /var/run/tailscale directory file type
type tailscale_var_run_t;
files_type(tailscale_var_run_t)

########################################
#
# tailscaled local policy
#

# Allow tailscaled in tailscaled_t context to execute itself to run another instance
# This is required when the child is execve'd with the parameter "be-child"
allow tailscaled_t tailscaled_exec_t:file execute_no_trans;

# Allow tailscaled in tailscaled_t context to execute /usr/bin/login which has a context of login_exec_t
can_exec(tailscaled_t, login_exec_t)
# Make tailscaled_t context an entry point for auth login programs like /usr/bin/login
auth_login_entry_type(tailscaled_t)
# Make tailscaled_t a domain that is used for a login program (/usr/bin/login) - defined in system/authlogin.if
auth_login_pgm_domain(tailscaled_t)

# Allow tailscaled_t to read /etc/passwd password file - defined in system/authlogin.if
auth_read_passwd_file(tailscaled_t)
# Allow tailscaled_t to read /etc/shadow password file - defined in system/authlogin.if
auth_read_shadow(tailscaled_t)

# Access tailscaled_t to read ssh key files
allow tailscaled_t sshd_key_t:file read_file_perms;

# Allow tailscaled_t to execute iptables in the iptables domain - defined in system/iptables.if
iptables_domtrans(tailscaled_t)

# Allow tailscaled_t to execute ifconfig in the ifconfig domain - defined in system/sysnetwork.if
sysnet_domtrans_ifconfig(tailscaled_t)

# Allow tailscaled_t to get attributes of user home directories - defined in system/userdom.if
userdom_getattr_user_home_dirs(tailscaled_t)
# Allow tailscaled_t to search user home directories - defined in system/userdom.if
userdom_search_user_home_dirs(tailscaled_t)

# Allow tailscaled to send and receive TCP traffic on generic network interfaces
# corenet_tcp_sendrecv_generic_if(tailscaled_t)
tailscale_network_connection(tailscaled_t)
# domain_can_mmap_files(tailscaled_t)
# systemd_exec_notify(tailscaled_t)
# systemd_notify_domtrans(tailscaled_t)
#init_write_pid_socket(tailscaled_t)
#init_dgram_send(tailscaled_t)
#init_use_notify(tailscaled_t)
corenet_tcp_bind_generic_port(tailscaled_t)
ps_process_pattern(tailscaled_t, domain)
corecmd_exec_bin(tailscaled_t)

# Allow tailscaled_t to read and write the pty multiplexor (/dev/ptmx) - defined in kernel/terminal.if
term_use_ptmx(tailscaled_t)
# Transform tailscaled_t into a pty type used by a login programs, like sshd - defined in kernel/terminal.if 
term_login_pty(tailscaled_t)
# Allow tailscaled_t to read and write to a generic pty type
allow tailscaled_t devpts_t:chr_file { read write_chr_file_perms setattr relabel_chr_file_perms };

# Allow tailscaled_t to read the network state information - defined in kernel/kernel.if
kernel_read_network_state(tailscaled_t)
# Allow tailscaled_t to read network sysctls - defined in kernel/kernel.if
kernel_read_net_sysctls(tailscaled_t)
# Allow tailscaled_t to read hardware state information from /sysfs - defined in kernel/devices.if
dev_read_sysfs(tailscaled_t)

# Allow tailscaled_t to send a message on the system DBUS - defined in contrib/dbus.if
dbus_send_system_bus(tailscaled_t)
# Allow tailscaled_t to connect to session bus types with a unix stream socket - defined in contrib/dbus.if
dbus_stream_connect_system_dbusd(tailscaled_t)
# Allow tailscaled_t to read DBUS pid files - defined in contrib/dbus.if
dbus_read_pid_files(tailscaled_t)
# Allow tailscaled_t to send and receive messages from NetworkManager over DBUS - defined in contrib/networkmanager.if
networkmanager_dbus_chat(tailscaled_t)

# Allow tailscaled_t to read generic SSL certificates - defined in system/miscfiles.if
miscfiles_read_generic_certs(tailscaled_t)

optional_policy(`
	unconfined_shell_domtrans(tailscaled_t)
')
#auth_use_pam(tailscaled_t)
#auth_domtrans_chk_passwd(tailscaled_t)
#auth_signal_chk_passwd(tailscaled_t)
#auth_rw_login_records(tailscaled_t)

# Allow tailscaled_t to manage /var/lib/tailscale and the files in it which has a context of tailscale_var_lib_t
manage_dirs_pattern(tailscaled_t, tailscale_var_lib_t, tailscale_var_lib_t)
manage_files_pattern(tailscaled_t, tailscale_var_lib_t, tailscale_var_lib_t)

# Allow tailscaled_t to manage /var/run/tailscale and the regular files, symlinks and socket files which has a context of tailscale_var_run_t
manage_files_pattern(tailscaled_t, tailscale_var_run_t, tailscale_var_run_t)
manage_dirs_pattern(tailscaled_t, tailscale_var_run_t, tailscale_var_run_t)
manage_sock_files_pattern(tailscaled_t, tailscale_var_run_t, tailscale_var_run_t)
manage_lnk_files_pattern(tailscaled_t, tailscale_var_run_t, tailscale_var_run_t)

# Allow tailscaled_t to search the contents of kernel module directories
files_search_kernel_modules(tailscaled_t)
# Allow tailscaled_t to read dependencies of kernel modules - defined in system/modutils.if
modutils_read_module_deps_files(tailscaled_t)
# Allow tailscaled_t to read the configuration options used when loading modules - defined in system/modutils.if
modutils_read_module_config(tailscaled_t)
# Allow tailscaled_t to execute insmod in the kmod domain to load a module (tun) - defined in system/modutils.if
modutils_domtrans_kmod(tailscaled_t)
# Allow tailscaled_t to request the kernel to load a module (tun) - defined in kernel/kernel.if
kernel_request_load_module(tailscaled_t)

# type=AVC msg=audit(1674306452.044:92911): avc:  denied  { setsched } for  pid=139224 comm="login" scontext=system_u:system_r:tailscaled_t:s0 tcontext=system_u:system_r:tailscaled_t:s0 tclass=process permissive=0
# type=AVC msg=audit(1674306452.044:92912): avc:  denied  { getattr } for  pid=139224 comm="login" path="/dev/pts/5" dev="devpts" ino=8 scontext=system_u:system_r:tailscaled_t:s0 tcontext=system_u:object_r:devpts_t:s0 tclass=chr_file permissive=0
# type=AVC msg=audit(1674306452.044:92913): avc:  denied  { write } for  pid=139224 comm="login" name="log" dev="devtmpfs" ino=36531 scontext=system_u:system_r:tailscaled_t:s0 tcontext=system_u:object_r:devlog_t:s0 tclass=sock_file permissive=0

#auth_domtrans_login_program(tailscaled_t, login_exec_t)
# domtrans_pattern(tailscaled_t, login_exec_t, login_t)

